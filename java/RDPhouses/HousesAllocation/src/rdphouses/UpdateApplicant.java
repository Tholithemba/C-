/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rdphouses;

import java.awt.Color;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author tholithemba
 */
public class UpdateApplicant extends javax.swing.JFrame {

    Registration reg = new Registration();
    private String column_tobe_updated;
    
    /**
     * Creates new form UpdateApplicant
     */
    public UpdateApplicant() {
        initComponents();
    }
    
    private void updateTdatabase(String updatedValue)
    {
        PreparedStatement ps;
        String query_statement = "update APPLICANT set "+column_tobe_updated+"=? where applicant_username=?";   
        
        try {
            ps = Connect2database.getConnection().prepareStatement(query_statement);
            ps.setString(1, updatedValue);
            ps.setString(2,reg.getUsername());
            
            if(ps.executeUpdate()>0)
            {
                warning_message.setForeground(Color.green);
                warning_message.setText("data updated successfully....");
            }
        } catch (SQLException ex) {
            Logger.getLogger(UpdateApplicant.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private String setValueToBeUpdated()
    {
        String updateCellName = (String)cellToUpdate.getSelectedItem();
        String updated_value = "";
        
        reg.setUsername(appl_username.getText());
        
        switch (updateCellName) {
            case "firstname": reg.setFirstname(updApplicantCell.getText());
                               updated_value = reg.getFirstname();
                               column_tobe_updated ="applicant_fname";
                break;
            case "lastname": reg.setLastname(updApplicantCell.getText());
                             updated_value = reg.getLastname();
                             column_tobe_updated ="applicant_lname";
                break;
            case "ID": reg.setIDNumber(updApplicantCell.getText());
                       updated_value = reg.getIDNumber();
                       column_tobe_updated ="applicant_id_no";
                break;
            case "date of birth": reg.setDOB(updApplicantCell.getText());
                                  updated_value = reg.getDOB();
                                  column_tobe_updated ="applicant_DOB";
                break;
            case "email": reg.setEmail(updApplicantCell.getText());
                          updated_value = reg.getEmail();
                          column_tobe_updated ="applicant_email";
                break;
            case "contact": reg.setContactNo(updApplicantCell.getText());
                            updated_value = reg.getContactNo();
                            column_tobe_updated ="applicant_cell_no";
                break;
            case "prefered communication medium": reg.setPrefCommMedium(updApplicantCell.getText());
                                                  updated_value = reg.getPrefCommMedium();
                                                  column_tobe_updated = "applicant_comm_medium";
                break;
            default:JOptionPane.showInputDialog("error value does not exist");
                break;
        }
        return updated_value;
    }
    private boolean validateInput()
    {
        if(cellToUpdate.getSelectedItem().equals("Select"))
            return outputStatement("Select value to be updated");
        
        if(updApplicantCell.getText().equals(""))
           return outputStatement("Enter updated value");
        
        if(appl_username.getText().equals(""))
           return outputStatement("Enter username");
        
        return true;
    }
    
    private boolean outputStatement(String name)
    {
        warning_message.setText(name);
        return false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        documents = new javax.swing.JPanel();
        closeUpdateApllicant = new javax.swing.JLabel();
        applicationStatus = new javax.swing.JLabel();
        updateApplica = new javax.swing.JLabel();
        UpdateApplBackTAdminHome = new javax.swing.JLabel();
        cellToUpdate = new javax.swing.JComboBox<>();
        updateChosenCell = new javax.swing.JLabel();
        updApplicantCell = new javax.swing.JTextField();
        warning_message = new javax.swing.JLabel();
        nameToBeUpdated = new javax.swing.JLabel();
        appl_username = new javax.swing.JTextField();
        label1 = new java.awt.Label();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        documents.setBackground(new java.awt.Color(53, 66, 74));
        documents.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(232, 73, 29), 3));

        closeUpdateApllicant.setIcon(new javax.swing.ImageIcon("/home/tholithemba/Desktop/github/java/RDPhouses/close.png")); // NOI18N
        closeUpdateApllicant.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeUpdateApllicantMouseClicked(evt);
            }
        });

        applicationStatus.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        applicationStatus.setForeground(java.awt.Color.white);
        applicationStatus.setText("Select field to modify");

        updateApplica.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        updateApplica.setForeground(java.awt.Color.white);
        updateApplica.setText("Update Applicant");

        UpdateApplBackTAdminHome.setBackground(new java.awt.Color(53, 66, 74));
        UpdateApplBackTAdminHome.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        UpdateApplBackTAdminHome.setForeground(java.awt.Color.white);
        UpdateApplBackTAdminHome.setIcon(new javax.swing.ImageIcon("/home/tholithemba/Desktop/github/java/RDPhouses/arrow.png")); // NOI18N
        UpdateApplBackTAdminHome.setText("Back");
        UpdateApplBackTAdminHome.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(53, 66, 74), 0));
        UpdateApplBackTAdminHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UpdateApplBackTAdminHomeMouseClicked(evt);
            }
        });

        cellToUpdate.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "firstname", "lastname", "ID", "date of birth", "email", "contact", "prefered communication medium" }));

        updateChosenCell.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        updateChosenCell.setForeground(new java.awt.Color(232, 73, 29));
        updateChosenCell.setText("Update ");
        updateChosenCell.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateChosenCellMouseClicked(evt);
            }
        });

        warning_message.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        warning_message.setForeground(java.awt.Color.red);

        nameToBeUpdated.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        nameToBeUpdated.setForeground(java.awt.Color.white);
        nameToBeUpdated.setText("Modify");

        label1.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        label1.setForeground(java.awt.Color.white);
        label1.setText("Username");

        javax.swing.GroupLayout documentsLayout = new javax.swing.GroupLayout(documents);
        documents.setLayout(documentsLayout);
        documentsLayout.setHorizontalGroup(
            documentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(documentsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(UpdateApplBackTAdminHome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(closeUpdateApllicant, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(documentsLayout.createSequentialGroup()
                .addGap(173, 173, 173)
                .addGroup(documentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(applicationStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nameToBeUpdated, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(documentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(warning_message, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateApplica)
                    .addGroup(documentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(cellToUpdate, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(updApplicantCell, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(appl_username, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 210, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, documentsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(updateChosenCell)
                .addGap(379, 379, 379))
        );
        documentsLayout.setVerticalGroup(
            documentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(documentsLayout.createSequentialGroup()
                .addGroup(documentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(UpdateApplBackTAdminHome, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(closeUpdateApllicant, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addComponent(updateApplica)
                .addGap(57, 57, 57)
                .addGroup(documentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(appl_username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(documentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cellToUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(applicationStatus))
                .addGap(36, 36, 36)
                .addGroup(documentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updApplicantCell, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameToBeUpdated))
                .addGap(18, 18, 18)
                .addComponent(warning_message, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(updateChosenCell)
                .addContainerGap(73, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(documents, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(documents, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void closeUpdateApllicantMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeUpdateApllicantMouseClicked
        System.exit(0);
    }//GEN-LAST:event_closeUpdateApllicantMouseClicked

    private void UpdateApplBackTAdminHomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UpdateApplBackTAdminHomeMouseClicked
        new AdminHome().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_UpdateApplBackTAdminHomeMouseClicked

    private void updateChosenCellMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateChosenCellMouseClicked
       
        boolean input_valid = validateInput();
        if(!input_valid)return;
        
         String updated_value = setValueToBeUpdated();
         
         updateTdatabase(updated_value);
        
    }//GEN-LAST:event_updateChosenCellMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateApplicant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateApplicant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateApplicant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateApplicant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateApplicant().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel UpdateApplBackTAdminHome;
    private javax.swing.JTextField appl_username;
    private javax.swing.JLabel applicationStatus;
    private javax.swing.JComboBox<String> cellToUpdate;
    private javax.swing.JLabel closeUpdateApllicant;
    private javax.swing.JPanel documents;
    private java.awt.Label label1;
    private javax.swing.JLabel nameToBeUpdated;
    private javax.swing.JTextField updApplicantCell;
    private javax.swing.JLabel updateApplica;
    private javax.swing.JLabel updateChosenCell;
    private javax.swing.JLabel warning_message;
    // End of variables declaration//GEN-END:variables
}
