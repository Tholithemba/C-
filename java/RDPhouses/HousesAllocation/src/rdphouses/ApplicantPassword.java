/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rdphouses;

import javax.swing.JOptionPane;

/**
 *
 * @author tholithemba
 */
public class ApplicantPassword extends javax.swing.JFrame {

    /**
     * Creates new form ApplicantPassword
     */
    public ApplicantPassword() {
        initComponents();
    }

    //validate input from the user
    private boolean validInput()
    {
        String orig_password = String.valueOf(jpfpasswordorig.getPassword());
        String retyped_password = String.valueOf(jpfpasswordver.getPassword());
        if(jpfpasswordorig.getPassword().length != 10)
        {
            lblerror_text.setText("the lenght of password must be ten charectors");
            clearCells();
            return false;
        }
        
        if(!orig_password.equals(retyped_password))
        {
            lblerror_text.setText("Password does not match");
            clearCells();
            return false;           
        }
        
        return true;
    }
    //end of validInput() method
    
    
    private void setValues()
    {
        Registration reg = new Registration();
        GenerateRandomChar grc = new GenerateRandomChar();
        String orig_password = String.valueOf(jpfpasswordorig.getPassword());
        reg.setPassword(grc.passwordEncryption(orig_password));
        
    }
    
    //clear error message
    private void clearErrorText()
    {
        lblerror_text.setText("");
    }
    
    //clear input textfields
    private void clearCells()
    {
        jpfpasswordorig.setText("");
        jpfpasswordver.setText("");
    }
    
    //update password
    private boolean updatePassword(){
 
        Crud crud = new Crud();
        String query = "update APPLICANT set applicant_password=? where "
                + "applicant_username=?";
        
        boolean success = crud.updateData(query);
        
        if(!success)
        {
            lblerror_text.setText("incorrect username");
            return success;
        }
        
        return success;
    }
   
    private void successMessage()
    {
        GenerateRandomChar grc = new GenerateRandomChar();
        JOptionPane.showMessageDialog(null, "Password was updated successfull \n"
                + "your new password:  "+grc.getPswrdTobeSent());
    }
    
    
    //back to doctor home page if doctor is active
    //otherwise back to patient home page
    private void backTo()
    {
       new ApplicantHome().setVisible(true);
        this.setVisible(false);
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        documents = new javax.swing.JPanel();
        closeApplicPassword = new javax.swing.JLabel();
        StatusBackTApplHome = new javax.swing.JLabel();
        jpfpasswordorig = new javax.swing.JPasswordField();
        jpfpasswordver = new javax.swing.JPasswordField();
        btnUpdatePassword = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblerror_text = new java.awt.Label();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        documents.setBackground(new java.awt.Color(53, 66, 74));
        documents.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(232, 73, 29), 3));

        closeApplicPassword.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rdphouses/close.png"))); // NOI18N
        closeApplicPassword.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeApplicPasswordMouseClicked(evt);
            }
        });

        StatusBackTApplHome.setBackground(new java.awt.Color(53, 66, 74));
        StatusBackTApplHome.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        StatusBackTApplHome.setForeground(java.awt.Color.white);
        StatusBackTApplHome.setText("Back");
        StatusBackTApplHome.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(53, 66, 74), 0));
        StatusBackTApplHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                StatusBackTApplHomeMouseClicked(evt);
            }
        });

        btnUpdatePassword.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        btnUpdatePassword.setForeground(java.awt.Color.blue);
        btnUpdatePassword.setText("Update");
        btnUpdatePassword.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnUpdatePasswordMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jLabel1.setForeground(java.awt.Color.white);
        jLabel1.setText("Retype Password");

        jLabel2.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jLabel2.setForeground(java.awt.Color.white);
        jLabel2.setText("Password");

        lblerror_text.setAlignment(java.awt.Label.CENTER);
        lblerror_text.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        lblerror_text.setForeground(java.awt.Color.red);

        javax.swing.GroupLayout documentsLayout = new javax.swing.GroupLayout(documents);
        documents.setLayout(documentsLayout);
        documentsLayout.setHorizontalGroup(
            documentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, documentsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(StatusBackTApplHome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 863, Short.MAX_VALUE)
                .addComponent(closeApplicPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, documentsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(documentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(documentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(btnUpdatePassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jpfpasswordorig)
                        .addComponent(jpfpasswordver, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(353, 353, 353))
            .addGroup(documentsLayout.createSequentialGroup()
                .addGap(208, 208, 208)
                .addComponent(lblerror_text, javax.swing.GroupLayout.PREFERRED_SIZE, 527, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        documentsLayout.setVerticalGroup(
            documentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(documentsLayout.createSequentialGroup()
                .addGroup(documentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(closeApplicPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StatusBackTApplHome, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addComponent(lblerror_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jpfpasswordorig, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jpfpasswordver, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addComponent(btnUpdatePassword)
                .addGap(70, 70, 70))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(documents, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(documents, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void closeApplicPasswordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeApplicPasswordMouseClicked
        System.exit(0);
    }//GEN-LAST:event_closeApplicPasswordMouseClicked

    private void StatusBackTApplHomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StatusBackTApplHomeMouseClicked
        backTo();
    }//GEN-LAST:event_StatusBackTApplHomeMouseClicked

    private void btnUpdatePasswordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdatePasswordMouseClicked
        
        clearErrorText();
        if(!validInput())return;
        setValues();
        if(!updatePassword())return;
        successMessage();
        clearCells();
    }//GEN-LAST:event_btnUpdatePasswordMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ApplicantPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ApplicantPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ApplicantPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ApplicantPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ApplicantPassword().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel StatusBackTApplHome;
    private javax.swing.JButton btnUpdatePassword;
    private javax.swing.JLabel closeApplicPassword;
    private javax.swing.JPanel documents;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPasswordField jpfpasswordorig;
    private javax.swing.JPasswordField jpfpasswordver;
    private java.awt.Label lblerror_text;
    // End of variables declaration//GEN-END:variables
}
