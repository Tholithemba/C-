/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package clinic_management;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author tholithemba
 */
public class CancelAppointment extends javax.swing.JFrame {

    
    Appointment appoint = new Appointment();
    DateFormat date_format = new DateFormat();
    Login back_to = new Login();
    /**
     * Creates new form CancelAppointment
     */
    public CancelAppointment() {
        initComponents();
    }
    
    //set user input values
    private void setValues(){
        appoint.setPatientEmail(txt_email.getText());
        date_format.setDate(cancel_appointment.getDate());
    }
    
    //validate user input
    private boolean validateInput(){
        
        if(appoint.getPatientEmail().equals(""))
            return erroroutputStatement("please enter email address");
        
        if(date_format.getDate() == null)
            return erroroutputStatement("please choose date");
        
        return true;
    }
    
    //display error message
    private boolean erroroutputStatement(String error_msg){
        lblerror_msg.setText(error_msg);
        return false;
    }
    
    
    //clear error message
    private void clearErrorText(){
        lblerror_msg.setText("");
    }
    
    private void cancelAppointment(){
        
        PreparedStatement ps;
        
        String query = "delete from APPOINTMENT where DATE=? and PATIENT_ID=?"
                + " and CHARGE=?";
        String appointment_date = date_format.sdf.format(date_format.getDate());
        try{
            ps = Connect2database.getConnection().prepareStatement(query);
            
            ps.setString(1, appointment_date);
            ps.setInt(2, appoint.getPatientid());
            ps.setString(3, "uncharged");
            
            if(ps.executeUpdate() > 0)
                JOptionPane.showMessageDialog(null, "Appointment cancelled successfully");
            
        } catch (SQLException ex) {
            Logger.getLogger(CancelAppointment.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    //get appointment created by the user from the database
    private void readAppointment(){
        
        PreparedStatement ps;
        ResultSet rs;
        
        ArrayList<String> appointment_details = new ArrayList<>();
        String query = "select DATE, CHECKIN, CHECKOUT from APPOINTMENT "
                + " where DATE >=? and PATIENT_ID=?";
        boolean appointment_exist = false;
        String todays_date  = date_format.simpl_date.format(new java.util.Date());
        System.out.println();
        try{
            ps = Connect2database.getConnection().prepareStatement(query);
            
            ps.setInt(1, appoint.getPatientid());
            ps.setString(2, todays_date);
            
            rs = ps.executeQuery();
            
            while(rs.next()){
             appointment_details.add(date_format.dateFormat(rs.getString("DATE")));
             appointment_details.add(date_format.dayFormat(rs.getString("DATE")));
             appointment_details.add(rs.getString("CHECKIN")+" - "+rs.getString("CHECKOUT"));
             appointment_exist = true;
            }
                
        } catch (SQLException ex) {
            Logger.getLogger(CancelAppointment.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        if(!appointment_exist){
            erroroutputStatement("No Patient Appointment was found");
            return;
        }
        
        Object[] object_sort = appointment_details.toArray();
        String[] convert_list = Arrays.copyOf(object_sort, object_sort.length, String[].class);
        appointment_detailslist.setListData(convert_list);
 
    }//end of create appointmnet

    //back to active user home page
    private void backTo(){
        
        if(back_to.getActivePatien())
            new PatientHome().setVisible(true);
        else
            new ReceptionistHome().setVisible(true);
        
        this.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        closeCancelAppointment = new javax.swing.JLabel();
        btnCancelAppointment = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        cancel_appointment = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        txt_email = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        viewAppointment = new javax.swing.JButton();
        lblerror_msg = new java.awt.Label();
        jScrollPane1 = new javax.swing.JScrollPane();
        appointment_detailslist = new javax.swing.JList<>();
        ConcelBackToRP = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(25, 25, 112));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.yellow, 3));

        closeCancelAppointment.setIcon(new javax.swing.ImageIcon("/home/tholithemba/Desktop/github/java/RDPhouses/close.png")); // NOI18N
        closeCancelAppointment.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeCancelAppointmentMouseClicked(evt);
            }
        });

        btnCancelAppointment.setBackground(java.awt.Color.red);
        btnCancelAppointment.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        btnCancelAppointment.setForeground(java.awt.Color.white);
        btnCancelAppointment.setText("Cancel");
        btnCancelAppointment.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCancelAppointmentMouseClicked(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(25, 25, 112));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.yellow, 2));

        jLabel2.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jLabel2.setForeground(java.awt.Color.white);
        jLabel2.setText("Date");

        jLabel1.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jLabel1.setForeground(java.awt.Color.white);
        jLabel1.setText("Email");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_email)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(cancel_appointment, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancel_appointment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(44, Short.MAX_VALUE))
        );

        viewAppointment.setBackground(java.awt.Color.blue);
        viewAppointment.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        viewAppointment.setForeground(java.awt.Color.white);
        viewAppointment.setText("View");
        viewAppointment.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                viewAppointmentMouseClicked(evt);
            }
        });

        lblerror_msg.setAlignment(java.awt.Label.CENTER);
        lblerror_msg.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        lblerror_msg.setForeground(java.awt.Color.red);

        appointment_detailslist.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.yellow, 2));
        appointment_detailslist.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        appointment_detailslist.setForeground(new java.awt.Color(25, 25, 112));
        jScrollPane1.setViewportView(appointment_detailslist);

        ConcelBackToRP.setBackground(new java.awt.Color(53, 66, 74));
        ConcelBackToRP.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        ConcelBackToRP.setForeground(java.awt.Color.white);
        ConcelBackToRP.setIcon(new javax.swing.ImageIcon("/home/tholithemba/Desktop/github/java/RDPhouses/arrow.png")); // NOI18N
        ConcelBackToRP.setText("Back");
        ConcelBackToRP.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(53, 66, 74), 0));
        ConcelBackToRP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ConcelBackToRPMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ConcelBackToRP)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(closeCancelAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(140, 140, 140)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnCancelAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(198, 198, 198)
                        .addComponent(viewAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(265, 265, 265))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(lblerror_msg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(147, 147, 147))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(64, 64, 64)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(116, 116, 116))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(closeCancelAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(ConcelBackToRP, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(lblerror_msg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewAppointment)
                    .addComponent(btnCancelAppointment))
                .addGap(47, 47, 47))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void closeCancelAppointmentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeCancelAppointmentMouseClicked
        System.exit(0);
    }//GEN-LAST:event_closeCancelAppointmentMouseClicked

    private void btnCancelAppointmentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelAppointmentMouseClicked
        
        clearErrorText();
        setValues();
        if(!validateInput())return;
        if(!appoint.patientEmailExist())return;
        cancelAppointment();
    }//GEN-LAST:event_btnCancelAppointmentMouseClicked

    private void viewAppointmentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewAppointmentMouseClicked
        
        clearErrorText();
        String patient_email = txt_email.getText();
        if(patient_email.equals("")){
             erroroutputStatement("Please enter email address");
             return;
        }
        appoint.setPatientEmail(patient_email);
        if(!appoint.patientEmailExist())return;
        readAppointment();
    }//GEN-LAST:event_viewAppointmentMouseClicked

    private void ConcelBackToRPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ConcelBackToRPMouseClicked
        
        backTo();
    }//GEN-LAST:event_ConcelBackToRPMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CancelAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CancelAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CancelAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CancelAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CancelAppointment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ConcelBackToRP;
    private javax.swing.JList<String> appointment_detailslist;
    private javax.swing.JButton btnCancelAppointment;
    private com.toedter.calendar.JDateChooser cancel_appointment;
    private javax.swing.JLabel closeCancelAppointment;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private java.awt.Label lblerror_msg;
    private javax.swing.JTextField txt_email;
    private javax.swing.JButton viewAppointment;
    // End of variables declaration//GEN-END:variables
}
