package clinic_management;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author tholithemba
 */
public class Patient extends javax.swing.JFrame {

    GenerateRandomChar g_rand_char = new GenerateRandomChar();
    UserRegistration user_reg = new UserRegistration();
    DBInputValidation dbInputval = new DBInputValidation();
    PatientRegistration p_reg = new PatientRegistration();
    UpdateDataFields udf = new UpdateDataFields();
    DateFormat df = new DateFormat();
    SendEmail send_email = new SendEmail();
    
    /**
     * Creates new form Patient
     */
    public Patient() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
   
    //initilise input values from the user
    private void setValues(){
        user_reg.setFirstname(patient_firstname.getText());
        user_reg.setLastname(patient_lastname.getText());
        p_reg.setPatientID(patient_ID.getText());
        p_reg.setPatientDOB(df.simpl_date.format(patient_DOB.getDate()));
        p_reg.setPatientGender((String)patient_gender.getSelectedItem());
        p_reg.setPatientMobileNo(patient_contact.getText());
        user_reg.setUsername(patient_email.getText());
        user_reg.setPassword(g_rand_char.generatePassword());
        p_reg.setPatientOccupation(patient_occup.getText());
        p_reg.setPatientAddress1(patient_addr1.getText());
        p_reg.setPatientAddress2(patient_addr2.getText());
        p_reg.setPatientAddress3(patient_addr3.getText());
        p_reg.setPatientCity(patient_city.getText());
        p_reg.setPatientPostalCode(patient_postal_code.getText());
        p_reg.setPatientProvince((String)patient_province.getSelectedItem());
    }
    //end of setValues() method
    
    //validate input from the user
    private boolean validateInput(){
        
        if(user_reg.getFirstName().equals(""))
            return outputStatement("enter firstname");
        
        if(user_reg.getLastname().equals(""))
            return outputStatement("enter lastname");
        
        if(p_reg.getPatientID().equals(""))
            return outputStatement("enter ID/passport number");
        
        if(p_reg.getPatientDOB().equals(""))
            return outputStatement("enter date of birth");
        
        if(p_reg.getPatientGender().equals("Select"))
            return outputStatement("select gender");
        
        if(p_reg.getPatientMobileNo().equals(""))
            return outputStatement("enter mobile number");
        
        if(user_reg.getUsername().equals(""))
            return outputStatement("enter email");
        
        if(p_reg.getPatientOccupation().equals(""))
            return outputStatement("enter occupation");
        
        if(p_reg.getPatientAddress1().equals(""))
            return outputStatement("enter address 1");
        
        if(p_reg.getPatientAddress2().equals(""))
            outputStatement("enter address 2");
        
        if(p_reg.getPatientAddress3().equals("")){
            outputStatement("enter address 3");
        }
        if(p_reg.getPatientCity().equals(""))
            outputStatement("enter city/town");
        
        if(p_reg.getPatientPostalCode().equals(""))
            outputStatement("postal code");
        
        if(p_reg.getPatientProvince().equals("Select"))
            outputStatement("select provnce");
 
        return true;
    }
    //en of validateInput() method
    
    //display error message
    private boolean outputStatement(String message){
        clearCells();
        warning_text.setText(message);
        return false;
    }
    
    
    //clear error text
    private void clearerrorMessage()
    {
        warning_text.setText("");
    }
    
    
    //inserting data into patient table
    public void create_patient()
    {
        PreparedStatement ps;
        
        String add_data = "INSERT INTO `PATIENT`(`NAME`, `SURNAME`, `DOB`, `ID_OR_PASSORT_NUMBER`, `GENDER`,"
                + " `MOBILE_NUMBER`, `EMAIL`,`PASSWORD`, `OCCUPATION`, `ADDRESS_ID`) VALUES"
                + " (?,?,?,?,?,?,?,?,?,?)";
        
        System.out.println("dbInputval.getUserID(): "+ dbInputval.getUserID());
        try
        {
            ps = Connect2database.getConnection().prepareStatement(add_data);
            
            ps.setString(1, user_reg.getFirstName());
            ps.setString(2, user_reg.getLastname());
            ps.setString(3, p_reg.getPatientDOB());
            ps.setString(4, p_reg.getPatientID());
            ps.setString(5, p_reg.getPatientGender());
            ps.setString(6, p_reg.getPatientMobileNo());
            ps.setString(7, user_reg.getUsername());
            ps.setString(8, user_reg.getPassword());
            ps.setString(9, p_reg.getPatientOccupation());
            ps.setInt(10, dbInputval.getUserID());
            
            if(ps.executeUpdate()>0)
                JOptionPane.showMessageDialog(null, "patient detials was captured successfully");
            
        }catch(SQLException sq)
        {
            sq.getSQLState();
        }
        
    }
    //end of create_patient
    
    
    //inserting data to address table
    public void create_address()
    {
       PreparedStatement ps;
       
       String address = "INSERT INTO `ADDRESS`(`ADDRESS_LINE_1`, `ADDRESS_LINE_2`,"
               + " `ADDRESS_LINE_3`, `CITY`, `PROVINCE`, `POSTAL_CODE`)"
               + " VALUES (?,?,?,?,?,?)";
       
       int post_code = Integer.parseInt(p_reg.getPatientPostalCode());
       
       try
       {
           ps = Connect2database.getConnection().prepareStatement(address);
           
           ps.setString(1, p_reg.getPatientAddress1());
           ps.setString(2, p_reg.getPatientAddress2());
           ps.setString(3, p_reg.getPatientAddress3());
           ps.setString(4, p_reg.getPatientCity());
           ps.setString(5, p_reg.getPatientProvince());
           ps.setInt(6, post_code);
           
            if(ps.executeUpdate()>0)
                addressID();
           
       }catch(SQLException sq)
       {
           JOptionPane.showMessageDialog(null, "there was problem when capturing address");
           sq.getSQLState();
       }
         
    }
    //end of create_address
    
    
    //get address id of the last registered user
    private void addressID()
    {
        PreparedStatement ps;
        ResultSet rs;
        
        String query = "select* from ADDRESS";
        udf.setHeadingName("ADDRESS_ID");
        
        try{
            ps = Connect2database.getConnection().prepareStatement(query);
            
            rs = ps.executeQuery();
            
            while(rs.next())
                dbInputval.setUserID(rs.getInt(udf.getHeadingName()));
            
        } catch (SQLException ex) {
            Logger.getLogger(Patient.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    // end of addressID() method
    
    //return true if email or ID/passport exist in the database otherwise false
    private boolean emailID_notexist(){
        boolean exist = checkDuplicate();
        if(exist)
            return outputStatement("Email or ID/passport already exist");
     
        return true;
    }
    
    
    //check if email or ID/passport exist in the database
    public boolean checkDuplicate()
    {
        PreparedStatement ps;
        ResultSet rs;
        boolean exist = false;

        String check = "select* from PATIENT where ID_OR_PASSORT_NUMBER=? or EMAIL=?";
        try
        {
            ps = Connect2database.getConnection().prepareStatement(check);

            ps.setString(1, p_reg.getPatientID());
            ps.setString(2, user_reg.getUsername());

            rs = ps.executeQuery();

            if(rs.next())
                exist = true;
        }
        catch(SQLException sq)
        {
            sq.getSQLState();
        }

        return exist;
    }
    //end of check_email function 
     
    //clear all input textfields
    private void clearCells()
    {
        patient_firstname.setText("");
        patient_lastname.setText("");
        patient_ID.setText("");
        patient_contact.setText("");
        patient_email.setText("");
        patient_occup.setText("");
        patient_addr1.setText("");
        patient_addr2.setText("");
        patient_addr3.setText("");
        patient_city.setText("");
        patient_postal_code.setText("");       
    }
    
    
    //back to Receptionist home page if active otherwise back login page
    private void backTo()
    {
        Login back_to = new Login();
        
        if(back_to.getActiveRecept())
            new ReceptionistHome().setVisible(true);
        else
            new Login().setVisible(true);

        this.setVisible(false);
    }
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        label1 = new java.awt.Label();
        label2 = new java.awt.Label();
        label3 = new java.awt.Label();
        label4 = new java.awt.Label();
        label5 = new java.awt.Label();
        label6 = new java.awt.Label();
        patient_firstname = new java.awt.TextField();
        patient_lastname = new java.awt.TextField();
        patient_ID = new java.awt.TextField();
        patient_occup = new java.awt.TextField();
        patient_gender = new javax.swing.JComboBox<>();
        patient_DOB = new com.toedter.calendar.JDateChooser();
        jPanel3 = new javax.swing.JPanel();
        label11 = new java.awt.Label();
        label12 = new java.awt.Label();
        label13 = new java.awt.Label();
        label14 = new java.awt.Label();
        label15 = new java.awt.Label();
        patient_province = new javax.swing.JComboBox<>();
        label16 = new java.awt.Label();
        patient_addr1 = new java.awt.TextField();
        patient_addr2 = new java.awt.TextField();
        patient_addr3 = new java.awt.TextField();
        patient_city = new java.awt.TextField();
        patient_postal_code = new java.awt.TextField();
        jPanel4 = new javax.swing.JPanel();
        label7 = new java.awt.Label();
        label8 = new java.awt.Label();
        patient_contact = new java.awt.TextField();
        patient_email = new java.awt.TextField();
        RegisterPatient = new javax.swing.JButton();
        warning_text = new java.awt.Label();
        closePatient = new javax.swing.JLabel();
        newPatient = new javax.swing.JLabel();
        PatientBackToRL = new javax.swing.JLabel();
        newUser = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(25, 25, 112));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.yellow, 3));

        jPanel2.setBackground(new java.awt.Color(25, 25, 112));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.yellow, 2));

        label1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        label1.setForeground(java.awt.Color.white);
        label1.setText("Firstname");

        label2.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        label2.setForeground(java.awt.Color.white);
        label2.setText("Lastname");

        label3.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        label3.setForeground(java.awt.Color.white);
        label3.setText(" ID/Passport No.");

        label4.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        label4.setForeground(java.awt.Color.white);
        label4.setText("Date of Birth");

        label5.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        label5.setForeground(java.awt.Color.white);
        label5.setText("Gender");

        label6.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        label6.setForeground(java.awt.Color.white);
        label6.setText("Occupation");

        patient_gender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Male", "Female" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(label6, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label5, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(patient_firstname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(patient_lastname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(patient_ID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(patient_occup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(patient_gender, 0, 168, Short.MAX_VALUE)
                    .addComponent(patient_DOB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(70, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(patient_firstname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(patient_lastname, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(patient_ID, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(patient_DOB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(patient_occup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(patient_gender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(25, 25, 112));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.yellow, 2));
        jPanel3.setForeground(java.awt.Color.yellow);

        label11.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        label11.setForeground(java.awt.Color.white);
        label11.setText("Address 1");

        label12.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        label12.setForeground(java.awt.Color.white);
        label12.setText("Address 2");

        label13.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        label13.setForeground(java.awt.Color.white);
        label13.setText("Address 3");

        label14.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        label14.setForeground(java.awt.Color.white);
        label14.setText("City/Town");

        label15.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        label15.setForeground(java.awt.Color.white);
        label15.setText("Postal code");

        patient_province.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Eastern Cape", "Freestate", "Gauteng", "KwaZulu-Natal", "Limpompo", "Mpumalanga", "Northern Cape", "North West", "Western Cape" }));

        label16.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        label16.setForeground(java.awt.Color.white);
        label16.setText("Province");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(label11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(label12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(label13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(label14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(label16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(patient_province, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(patient_addr1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(patient_postal_code, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(patient_city, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(patient_addr3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(patient_addr2, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(label11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(patient_addr1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(patient_addr2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(patient_addr3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(patient_city, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label15, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(patient_postal_code, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label16, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(patient_province, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45))
        );

        jPanel4.setBackground(new java.awt.Color(25, 25, 112));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.yellow, 2));

        label7.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        label7.setForeground(java.awt.Color.white);
        label7.setText("Contact No.");

        label8.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        label8.setForeground(java.awt.Color.white);
        label8.setText("Email");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(label7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(label8, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(patient_email, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(patient_contact, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(75, 75, 75))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(patient_contact, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(patient_email, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(61, Short.MAX_VALUE))
        );

        RegisterPatient.setBackground(java.awt.Color.blue);
        RegisterPatient.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        RegisterPatient.setForeground(java.awt.Color.white);
        RegisterPatient.setText("Register");
        RegisterPatient.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RegisterPatientMouseClicked(evt);
            }
        });

        warning_text.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        warning_text.setForeground(java.awt.Color.red);

        closePatient.setIcon(new javax.swing.ImageIcon(getClass().getResource("/clinic_management/close.png"))); // NOI18N
        closePatient.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closePatientMouseClicked(evt);
            }
        });

        newPatient.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        newPatient.setForeground(java.awt.Color.white);
        newPatient.setText("New Patient");

        PatientBackToRL.setBackground(new java.awt.Color(53, 66, 74));
        PatientBackToRL.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        PatientBackToRL.setForeground(java.awt.Color.white);
        PatientBackToRL.setText("Back");
        PatientBackToRL.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(53, 66, 74), 0));
        PatientBackToRL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PatientBackToRLMouseClicked(evt);
            }
        });

        newUser.setForeground(java.awt.Color.red);
        newUser.setText("       Already a user?  sign in");
        newUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newUserMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 105, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(92, 92, 92))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(RegisterPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(warning_text, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(215, 215, 215))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(PatientBackToRL)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(newPatient)
                        .addGap(369, 369, 369)
                        .addComponent(closePatient, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(newUser, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(332, 332, 332))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(closePatient, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(newPatient, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(PatientBackToRL, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(49, 49, 49)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 4, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(warning_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RegisterPatient)
                .addGap(1, 1, 1)
                .addComponent(newUser)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void closePatientMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closePatientMouseClicked
        System.exit(0);
    }//GEN-LAST:event_closePatientMouseClicked

    private void RegisterPatientMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RegisterPatientMouseClicked
        clearerrorMessage();
        setValues();
        if(!validateInput())return;
        
        if(!emailID_notexist())return;
        
        if(!send_email.sendEmail())return;
        create_address();
        create_patient();
        clearCells();
        
    }//GEN-LAST:event_RegisterPatientMouseClicked

    private void PatientBackToRLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PatientBackToRLMouseClicked

        backTo();
    }//GEN-LAST:event_PatientBackToRLMouseClicked

    private void newUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newUserMouseClicked
      
        backTo();
    }//GEN-LAST:event_newUserMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Patient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Patient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Patient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Patient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Patient().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel PatientBackToRL;
    private javax.swing.JButton RegisterPatient;
    private javax.swing.JLabel closePatient;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private java.awt.Label label1;
    private java.awt.Label label11;
    private java.awt.Label label12;
    private java.awt.Label label13;
    private java.awt.Label label14;
    private java.awt.Label label15;
    private java.awt.Label label16;
    private java.awt.Label label2;
    private java.awt.Label label3;
    private java.awt.Label label4;
    private java.awt.Label label5;
    private java.awt.Label label6;
    private java.awt.Label label7;
    private java.awt.Label label8;
    private javax.swing.JLabel newPatient;
    private javax.swing.JLabel newUser;
    private com.toedter.calendar.JDateChooser patient_DOB;
    private java.awt.TextField patient_ID;
    private java.awt.TextField patient_addr1;
    private java.awt.TextField patient_addr2;
    private java.awt.TextField patient_addr3;
    private java.awt.TextField patient_city;
    private java.awt.TextField patient_contact;
    private java.awt.TextField patient_email;
    private java.awt.TextField patient_firstname;
    private javax.swing.JComboBox<String> patient_gender;
    private java.awt.TextField patient_lastname;
    private java.awt.TextField patient_occup;
    private java.awt.TextField patient_postal_code;
    private javax.swing.JComboBox<String> patient_province;
    private java.awt.Label warning_text;
    // End of variables declaration//GEN-END:variables
}
